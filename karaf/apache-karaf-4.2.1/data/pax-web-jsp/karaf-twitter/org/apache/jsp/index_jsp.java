/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.11.v20180605
 * Generated at: 2018-10-08 01:22:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!-- Author: Jie Peng Hu -->\n\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<head>\n<title>Karaf/Twitter assignment</title>\n</head>\n<body>\n\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/topHeader.jsp", out, false);
      out.write("\n\n\t<h3>Twitter REST APIs</h3>\t\n\t\n\t<ol>\n\t\t<li>\n\t\t<h4>Timeline API</h4>\n\t\t<p>Retrieves the latest <b>number</b> tweets by the specified <b>Twitter username</b>.<br>Includes retweets as well. Implements Twitter's Get Tweet Timelines API: https://api.twitter.com/1.1/statuses/user_timeline.json</p>\n\t\t<form method=\"POST\" action=\"timelinetweets\">\n\t\t\t<input name=\"user\" type=\"text\" placeholder=\"Twitter username\" required>\n\t\t\t<input name=\"count\" type=\"number\" placeholder=\"Number of tweets\" min=\"1\" max=\"200\" value=\"1\">\n\t\t\t<input type=\"submit\" value=\"click\">\n\t\t</form>\n\t\t</li>\n\n\t\t<li>\n\t\t\t<h4>Search Tweet API</h4>\n\t\t\t<p>Retrieves the latest tweets from the <b>input</b> box below. It implements Twitter's Get Search Tweets API</p> \n\t\t\t</form>\n\t\t\t<form method=\"POST\" action=\"searchtweets\">\n\t\t\t\t<input name=\"tweet\" type=\"text\" placeholder=\"Enter tweet to search\" required>\n\t\t\t\t<input type=\"submit\" value=\"search\">\n\t\t\t</form>\n\t\t</li>\n\t\t<li>\n\t\t\t<h4> Followers API </h4>\n\t\t\t<p>Returns a list of specified user followers. Implements Twitter's Get Follower/List API</p>\n");
      out.write("\t\t\t<form method=\"POST\" action=\"followers\">\n\t\t\t\t<input name=\"username\" type=\"text\" placeholder=\"Enter username\" required>\n\t\t\t\t<input type=\"submit\" value=\"DisplayFollowers\">\n\t\t\t</form>\t\n\t\t</li>\n\t\t<li>\n\t\t\t<h4> Following API </h4>\n\t\t\t<p>Returns a list of friends for the specified user</p>\n\t\t\t<form method=\"POST\" action=\"following\">\n\t\t\t\t<input name=\"username\" type=\"text\" placeholder=\"Enter username\" required>\n\t\t\t\t<input type=\"submit\" value=\"DisplayFollowing\">\n\t\t\t</form>\t\n\t\t</li>\n\t\t<li>\t\n\t\t\t<h4> Favorites API </h4>\n\t\t\t<p>Returns the recent Tweets liked by specified user </p>\n\t\t\t<form method=\"POST\" action=\"favorites\">\n\t\t\t\t<input name=\"username\" type=\"text\" placeholder=\"Enter username\" required>\n\t\t\t\t<input type=\"submit\" value=\"DisplayFavorites\">\n\t\t\t</form>\n\t\t</li>\n\t\t<li>\n\t\t\t<h4>Trending Topic API</h4>\n\t\t\t<p>Retrieves the latest <b>number</b> trending topic from Twitter's Get Trends/Place API</p>\n\t\t\t<form method=\"POST\" action=\"trendingtweets\">\n\t\t\t\t<input name=\"numberOfTopic\" type=\"number\" placeholder=\"Number of results\" min=\"1\" max=\"23\" value=\"1\">\n");
      out.write("\t\t\t\t<input type=\"submit\" value=\"Explore Trending\">\n\t\t\t</form>\n\t\t</li>\n\t\t<li>\n\t\t\t<h4>Users Suggestion API</h4>\n\t\t\t<p>Retrieves top Twitter's user suggestion based on the input <b>topic</b> implementing Twitter's Get Users/Suggestion API</p>\n\t\t\t<form method=\"POST\" action=\"suggestion\">\n\t\t\t\t<input name=\"topic\" type=\"text\" placeholder=\"Enter topic\" value=\"Sports\" required>Â \n\t\t\t\t<input name=\"resultCount\" type=\"number\" min=\"1\" max=\"20\" value=\"1\">\n\t\t\t\t<input type=\"submit\" value=\"Submit Query\">\n\t\t\t</form>\n\t\t</li>\n\t\t<li>\n\t\t\t<h4>Retweets API</h4>\n\t\t\t<p>returns all retweets belonging to user</p>\n\t\t\t<form method=\"POST\" action=\"retweets\">\n\t\t\t\t<input type=\"submit\" value=\"Retrieve @TwitterDev's Retweets\">\n\t\t\t</form>\n\t\t</li>\n\t</ol>\n</body>\n</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
